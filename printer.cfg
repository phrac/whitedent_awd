[include fluidd.cfg]                  # Include configuration from mainsail.cfg file
[include shaketune.cfg]
[include macros/*]

[virtual_sdcard]
path: /home/derek/printer_data/gcodes    # Path to the virtual SD card directory
on_error_gcode: CANCEL_PRINT            # G-code to execute on error (defined in CANCEL_PRINT macro)

[gcode_arcs]
resolution: 0.1                         # Arc interpolation resolution, handles G2/G3 commands

[exclude_object]                        # Exclude object for cancellation

[force_move]
enable_force_move: true                 # Enable force move feature


# Toolhead pins definitions
#[include toolheads/nitehawk36.cfg]
[include toolheads/h36.cfg]

#####################################################################
##	                 EBB SB2209(RP2040) Config
#####################################################################
[mcu toolhead]
canbus_uuid: afb522496eac          # Unique identifier for the CAN bus interface

[mcu]                                   # Main MCU configuration
canbus_uuid: 0c22bb45af37               # CAN bus UUID
canbus_interface: can0                  # CAN bus interface

[mcu scanner]
canbus_uuid: 0d38fbdc7247
#is_non_critical: true

#####################################################################
##	                 Temperature Monitoring
#####################################################################
[temperature_sensor Toolhead_MCU]            # EBB_NTC temperature sensor configuration
sensor_type: temperature_mcu
sensor_mcu: toolhead

[temperature_sensor M8P_MCU]            # BTT-MCU temperature sensor configuration       
sensor_type: temperature_mcu            # Sensor type

[temperature_sensor CM4]                # BTT-PI temperature sensor configuration
sensor_type: temperature_host           # Sensor type

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105
#####################################################################
##                     Model and Acceleration
#####################################################################
[printer]                             # Printer configuration
kinematics: corexy                    # Printer type: corexy
max_velocity: 600                     # Maximum velocity (max 300)
max_accel: 10000                       # Maximum acceleration (max 4000)
max_z_velocity: 50                    # Maximum Z-axis velocity
max_z_accel: 100                      # Maximum Z-axis acceleration
minimum_cruise_ratio: 0.5             # Default 0.5
square_corner_velocity: 25            # Square corner velocity

#####################################################################
##                            X Axis
#####################################################################

[stepper_x]
step_pin: PE6                         # X-axis motor pulse pin setting
dir_pin: !PE5                         # X-axis motor direction pin setting
enable_pin: !PC14                     # X-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: tmc5160_stepper_x:virtual_endstop            # Limit switch PIN setting (X-)
position_min: 0                       # X-axis minimum travel - software limit
position_endstop: 300                 # Mechanical reset point coordinates for X-axis
position_max: 300                     # X-axis maximum travel - software limit
homing_speed: 150                     # Homing speed maximum 100
homing_retract_dist: 5                # Setback distance after the first trigger of the homing switch
homing_positive_dir: true             # Direction of homing (generally no change required)
use_sensorless_homing: true

[tmc5160 stepper_x]
cs_pin: PC13                          # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 1.5                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation
sense_resistor: 0.075
diag0_pin: ^PF4
home_current: 0.6
current_change_dwell_time: 0.2

[stepper_x1]
step_pin: PD4                         # X1-axis motor pulse pin setting
dir_pin: !PD3                         # X1-axis motor direction pin setting
enable_pin: !PD6                      # X1-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_x1]
cs_pin: PD5                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 1.5                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation
sense_resistor: 0.075

#####################################################################
##                           Y Aixs
#####################################################################

[stepper_y]
step_pin: PC7                         # Y-axis motor pulse pin setting
dir_pin: !PC8                         # Y-axis motor direction pin setting
enable_pin: !PD2                      # Y-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: tmc5160_stepper_y:virtual_endstop                      # Limit switch PIN setting (Y-)
position_min: 0                       # Y-axis minimum travel - software limit
position_endstop: 311.1               # Mechanical reset point coordinates for Y-axis (change to 350 for 350 models)
position_max: 311.1                   # Y-axis maximum travel - software limit (change to 350 for 350 models)
homing_speed: 150                     # Homing speed maximum 100
homing_retract_dist: 5                # Setback distance after the first trigger of the homing switch
homing_positive_dir: true             # Direction of homing (generally no change required)
use_sensorless_homing: true

[tmc5160 stepper_y]
cs_pin: PC6                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 1.5                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation
sense_resistor: 0.075
diag0_pin: ^PF2
home_current: 0.6
current_change_dwell_time: 0.2


[stepper_y1]
step_pin: PE2                         # Y1-axis motor pulse pin setting
dir_pin: !PE1                         # Y1-axis motor direction pin setting
enable_pin: !PE4                      # Y1-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_y1]
cs_pin: PE3                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 1.5                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation
sense_resistor: 0.075

[stepper_z]
step_pin: PB8                         # Z0-axis motor pulse pin setting
dir_pin: !PB7                         # Z0-axis motor direction pin setting
enable_pin: !PE0                      # Z0-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm
endstop_pin: probe:z_virtual_endstop  # Limit switch PIN setting (Z0-)
position_max: 235                     # Z0-axis maximum travel - software limit
position_min: -5.0                    # Z0-axis minimum travel - software limit
homing_speed: 20                      # Homing speed
homing_retract_dist: 0                # Setback distance after the first trigger of the homing switch
homing_positive_dir: False            # Direction of homing (generally no change required)

#--------------------------------------------------------------------
[tmc2209 stepper_z]                   # TMC2209 driver settings
uart_pin: PB9                         # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)
sense_resistor: 0.110

#--------------------------------------------------------------------
[stepper_z1]
step_pin: PB4                         # Z1-axis motor pulse pin setting
dir_pin: !PB3                         # Z1-axis motor direction pin setting
enable_pin: !PB6                      # Z1-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z1]                  # TMC2209 driver settings
uart_pin: PB5                         # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)
sense_resistor: 0.110
#--------------------------------------------------------------------
[stepper_z2]
step_pin: PG13                        # Z2-axis motor pulse pin setting
dir_pin: !PG12                        # Z2-axis motor direction pin setting
enable_pin: !PG15                     # Z2-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z2]                  # TMC2209 driver settings
uart_pin: PG14                        # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)
sense_resistor: 0.110

#####################################################################
##                  Extruder Motor
#####################################################################

[extruder]
step_pin: toolhead:E_STEP              # Step pin
dir_pin: toolhead:E_DIR               # Direction pin, "!" indicates logic inversion
enable_pin: !toolhead:E_EN           # Enable pin, "!" indicates logic inversion
full_steps_per_rotation: 200         # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
microsteps: 16                       # Microsteps setting
## When calibrating the extruder, update the following value
## Assume you request 100mm feed but get 98mm,
## New value = old value x (actual extruded length / target length)
## 22.6789511 is our recommended value
gear_ratio: 50:10                    # Gear ratio
rotation_distance: 22.6789511        # Rotation distance
nozzle_diameter: 0.400               # Nozzle diameter
filament_diameter: 1.750             # Filament diameter
heater_pin: toolhead:HE0             # Heater pin
heater_power: 64
#cooling_fan: fan
control: mpc                         # Control method
min_temp: -20                        # Minimum temperature
max_temp: 350                        # Maximum temperature
min_extrude_temp: 170                # Minimum extrude temperature
pressure_advance: 0.05               # Pressure advance - try to keep pressure below 1.0
pressure_advance_smooth_time: 0.040   # Pressure advance smooth time - default is 0.040
sensor_type: PT1000                # Temperature sensor type
sensor_pin: toolhead:TH0             # Sensor pin
pullup_resistor: 2200

[tmc2209 extruder]
uart_pin: toolhead:E_UART              # UART communication pin
tx_pin: toolhead:E_TX
interpolate: true                    # Enable 256 microstep interpolation
run_current: 0.60                    # Running current
sense_resistor: 0.110

#--------------------------------------------------------------------
[verify_heater extruder]             # Heater block temperature tolerance configuration
max_error: 120                       # Maximum error
check_gain_time: 120                 # Tolerance time
hysteresis: 50                       # Tolerance temperature
heating_gain: 2                      # Heating gain

#####################################################################
##                  Resonance Testing
#####################################################################
[adxl345]
cs_pin: toolhead:CS
spi_software_sclk_pin: toolhead:SCLK
spi_software_mosi_pin: toolhead:MOSI
spi_software_miso_pin: toolhead:MISO

[resonance_tester]
accel_chip: adxl345
probe_points:
   150, 150, 10

#####################################################################
##                  Heated Bed
#####################################################################
[heater_bed]
heater_pin: PA1                        # (BE0) Heater pin
sensor_pin: PB1                        # Sensor interface (TB) sensor pin
sensor_type: ATC Semitec 104GT-2       # ATC Semitec 104GT-2 temperature sensor type
control: pid                           # Control method
## Heated bed temperature PID calibration command: "PID_CALIBRATE HEATER=heater_bed TARGET=100"
pid_kp: 53.467                         # PID Kp value
pid_ki: 0.931                          # PID Ki value
pid_kd: 767.921                        # PID Kd value
min_temp: -20                          # Minimum temperature
max_temp: 135                          # Maximum temperature
max_power: 1.0                         # Maximum power

#####################################################################
##                          Idle Timeout for Heated Bed
#####################################################################

[idle_timeout]
timeout: 1800                # Turn off heated bed if idle for more than 30 minutes

#####################################################################
# 	                 Cartographer V3 （ADXL345）
#####################################################################

[scanner]
mcu: scanner
#    Fill in the UUID that was just recorded           
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 23                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
# 
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc
scanner_touch_z_offset: 0.05         
#    This is the default and will be overwritten and added to the DO NOT SAVE area by using UI to save z offset
mesh_runs: 2
#    Number of passes to make during mesh scan.

#[adxl345]
#cs_pin: scanner:PA3
#spi_bus: spi1

#[resonance_tester]
#accel_chip: adxl345             # Specifies ADXL345 accelerometer for resonance testing
#probe_points:
#    150, 150, 20                # Coordinates of the probe points for resonance testing


#####################################################################
##                  Bed Mesh Calibration
#####################################################################
[bed_mesh]
zero_reference_position: 150,150  
#    This option is suitable for the 300 model. 
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 30, 30
#    start point of bed mesh [X, Y]
mesh_max: 270, 270
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

#####################################################################
##                  Filament Sensors
#####################################################################
[filament_switch_sensor pre_extruder]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#immediate_runout_gcode:
#   A list of G-Code commands to execute immediately after a filament
#   runout is detected and runout_distance is greater than 0.
#   See docs/Command_Templates.md for G-Code format.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#runout_distance: 0.0
#   Defines how much filament can still be pulled after the
#   switch sensor triggered (e.g. you have a 60cm reverse bowden between your
#   extruder and your sensor, you would then set runout_distance to something
#   like 590 to leave a small safety margin and now the print will not
#   immediately pause when the sensor triggers but rather keep printing until
#   the filament is at the extruder). The default is 0 millimeters.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: toolhead:PRE_EXTRUDE
#   The pin on which the switch is connected. This parameter must be
#   provided.
#smart:
#   If set to true the sensor will use the virtual_sd_card module to determine
#   whether the printer is printing which is more reliable but will not work
#   when streaming a print over usb or similar.
#always_fire_events:
#   If set to true, runout events will always fire no matter whether the sensor
#   is enabled or disabled. Usefull for MMUs
#check_on_print_start:
#   If set to true, the sensor will be reevaluated when a print starts and if
#   no filament is detected the runout_gcode will be run no matter the defined
#   runout_distance(immediate_runout_gcode will not be run in this case)

[filament_switch_sensor post_extruder]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#immediate_runout_gcode:
#   A list of G-Code commands to execute immediately after a filament
#   runout is detected and runout_distance is greater than 0.
#   See docs/Command_Templates.md for G-Code format.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#runout_distance: 0.0
#   Defines how much filament can still be pulled after the
#   switch sensor triggered (e.g. you have a 60cm reverse bowden between your
#   extruder and your sensor, you would then set runout_distance to something
#   like 590 to leave a small safety margin and now the print will not
#   immediately pause when the sensor triggers but rather keep printing until
#   the filament is at the extruder). The default is 0 millimeters.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: toolhead:POST_EXTRUDE
#   The pin on which the switch is connected. This parameter must be
#   provided.
#smart:
#   If set to true the sensor will use the virtual_sd_card module to determine
#   whether the printer is printing which is more reliable but will not work
#   when streaming a print over usb or similar.
#always_fire_events:
#   If set to true, runout events will always fire no matter whether the sensor
#   is enabled or disabled. Usefull for MMUs
#check_on_print_start:
#   If set to true, the sensor will be reevaluated when a print starts and if
#   no filament is detected the runout_gcode will be run no matter the defined
#   runout_distance(immediate_runout_gcode will not be run in this case)


#####################################################################
##                  Fans
#####################################################################

[heater_fan hotend_fan]          # Hotend fan
pin: toolhead:HE_FAN               # Hotend fan pin
heater: extruder                 # Associated heating device
heater_temp: 50.0                # Temperature to start the fan
cycle_time: 0.00003                 # Cycle time
tachometer_pin: toolhead:HE_TACH
tachometer_ppr: 2
#--------------------------------------------------------------------

[heater_fan Skirt_fan]            # Skirt fan 
pin: PF9                         # FAN-2
cycle_time: 0.00003              # Cycle time
shutdown_speed: 0.0              # Closing speed (Please do not change)
kick_start_time: 0.5             # start-up time (Please do not change)
heater: heater_bed               # Related equipment: heater_bed
heater_temp: 50                  # How many degrees does the heat bed reach to activate the fan
fan_speed: 0.5                   # Fan speed

#--------------------------------------------------------------------

[controller_fan driver_fan]      # Driver cooling fan
pin: PF6                         # Fan pin 
cycle_time: 0.00003                  # Cycle time
max_power: 1.0                   # Maximum power
shutdown_speed: 0.0              # Shutdown speed
fan_speed: 0.8                   # Fan speed when heater or stepper driver is active (0.0 to 1.0). Default is 1.0.
idle_timeout: 90                 # Time in seconds to keep the fan running after the stepper driver or heater is no longer active. Default is 30 seconds.
idle_speed: 0.4                  # Fan speed after the stepper driver is no longer active and before idle_timeout is reached (0.0 to 1.0). Default is fan_speed.
stepper: stepper_x, stepper_x1, stepper_y, stepper_y1               # Active motors
#Define the name of the heater/stepper configuration section associated with this fan. 
#If a comma-separated list of heater/stepper names is provided here, the fan will be enabled when any of the given heaters/steppers are enabled.
#The default heater is "extruder", and the default stepper is all steppers.

#--------------------------------------------------------------------

#Note: The following FAN0/FAN1/FAN2 settings are only applicable when using OrcaSlicer,
#as only OrcaSlicer allows for the additional configuration of parts cooling fans and filter fans. 
#If you use other slicing software, please comment out the following configurations.
# instead of using [fan], we define the default part cooling fan with [fan_generic] here
# this is the default part cooling fan

[multi_pin part_fan_pins]
pins: toolhead:PC_FAN1, toolhead:PC_FAN2


[fan_generic part_fan]               # 5015 Part cooling Blower 
pin: multi_pin:part_fan_pins               # Fan pin 
cycle_time: 0.00003                  # Cycle time
hardware_pwm: false              # hardware pwm

#--------------------------------------------------------------------

[fan_generic auxillary_cooling_fan]               # 12032 Auxiliary Part cooling Blower 
pin: PA0                         # Fan pin
cycle_time: 0.00003              # Cycle time
hardware_pwm: false              # hardware pwm
kick_start_time: 0.5             # start-up time (Please do not change)

#--------------------------------------------------------------------

[fan_generic nevermore_fan]               # Fume_Pack Exhaust Fan
pin: PF7                         # Fan pin     
cycle_time: 0.00003                 # Cycle time
hardware_pwm: false               # hardware pwm
kick_start_time: 0.5             # start-up time (Please do not change)

#--------------------------------------------------------------------

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}


#####################################################################
##                            RGB-LED Lights
#####################################################################

[neopixel toolhead]
pin: toolhead:RGB            # LED pin
chain_count: 3                # Number of LEDs
color_order: GRB             # Color order
initial_RED: 0.2              # Initial red brightness
initial_GREEN: 0.2            # Initial green brightness
initial_BLUE: 0.2             # Initial blue brightness

#[include stealthburner_leds.cfg]


[neopixel caselight]
pin: PD15                     # Signal interface
chain_count: 44               # Number of LEDs
color_order: GRBW              # Color order
initial_RED: 0.2              # Initial red brightness
initial_GREEN: 0.0            # Initial green brightness
initial_BLUE: 0.0             # Initial blue brightness
initial_WHITE: 0.0

####################################################################################
##                                    Homing Override
####################################################################################
[homing_override]
axes: z                    # Override homing for the Z axis only
set_position_z: 0           # Set the Z position to 0 after homing
gcode:
    G90                     # Set to absolute positioning mode
    G0 Z10 F1200            # Move Z axis to 10mm above the bed at 1200 mm/min
    G28 Y                   # Home Y axis
    G28 X                   # Home X axis
    G1 X150 Y150 F7200      # Move to a specific coordinate (125, 125) at 7200 mm/min
    G28 Z                   # Home Z axis again

####################################################################################
##                                    Z Tilt Adjustment
####################################################################################
[z_tilt_ng]
z_positions:
  -50, 18
  150, 348
  350, 18
points:
  50, 50
  150, 250
  250, 50


speed: 350                 # Speed of Z tilt adjustment
horizontal_move_z: 2       # Z axis move speed for adjustments
retries: 10                # Number of retries for adjustment points
retry_tolerance: 0.0075    # Retry tolerance for adjustment accuracy
